# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_preproc.ipynb.

# %% auto 0
__all__ = ['HTMLEscape']

# %% ../nbs/01_preproc.ipynb 3
from fastcore.basics import *
from nbdev2.docexp import preprocess_cell,_run_preprocessor
from html.parser import HTMLParser

# %% ../nbs/01_preproc.ipynb 7
class _HTMLdf(HTMLParser):
    "HTML Parser that finds a dataframe."
    df,scoped = False,False
    def handle_starttag(self, tag, attrs):
        if tag == 'style' and 'scoped' in dict(attrs): self.scoped=True
    def handle_data(self, data):
        if '.dataframe' in data and self.scoped: self.df=True
    def handle_endtag(self, tag):
        if tag == 'style': self.scoped=False
                
    @classmethod
    def search(cls, x):
        parser = cls()
        parser.feed(x)
        return parser.df

# %% ../nbs/01_preproc.ipynb 8
@preprocess_cell
def HTMLEscape(cell):
    "Place HTML in a codeblock and surround it with a <HTMLOutputBlock> component."
    if cell.cell_type !='code': return
    for o in cell.outputs:
        if nested_idx(o, 'data', 'text/html'):
            cell.metadata.html_output = True
            html = o['data']['text/html']
            cell.metadata.html_center = not _HTMLdf.search(html)
            o['data']['text/html'] = '```html\n'+html.strip()+'\n```'
